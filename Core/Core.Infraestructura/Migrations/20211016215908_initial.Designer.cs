// <auto-generated />
using System;
using Core.Infraestructura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Core.Infraestructura.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211016215908_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticuloEstado")
                        .HasColumnType("int");

                    b.Property<string>("CodigoArticulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticuloCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdReceta")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TalleArticulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticuloCategoria");

                    b.HasIndex("IdReceta");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ArticuloCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArticuloCategoria");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ArticuloStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("EsReposicionPorLote")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedorPreferido")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.Property<int>("StockTotal")
                        .HasColumnType("int");

                    b.Property<int>("TamañoLote")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdProveedorPreferido");

                    b.HasIndex("IdSucursal");

                    b.ToTable("ArticulosStock");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.CajaSucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdSucursal");

                    b.ToTable("CajaSucursales");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CUIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ClienteCuentaCorriente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("MontoPercibido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PagoAcreditado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPago")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVenta");

                    b.ToTable("ClienteCuentaCorriente");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.CompraArticulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("MontoRecibido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdCompra");

                    b.ToTable("CompraArticulo");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.CompraInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("MontoRecibido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdCompra");

                    b.ToTable("CompraInsumo");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.EtapaOrdenProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EtapasOrdenProduccion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            CreadoPor = "Initial",
                            Descripcion = "Cortado",
                            FechaCreacion = new DateTime(2021, 10, 16, 18, 59, 8, 3, DateTimeKind.Local).AddTicks(6879),
                            Orden = 1
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            CreadoPor = "Initial",
                            Descripcion = "Aparado",
                            FechaCreacion = new DateTime(2021, 10, 16, 18, 59, 8, 3, DateTimeKind.Local).AddTicks(7070),
                            Orden = 2
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            CreadoPor = "Initial",
                            Descripcion = "Preparacion",
                            FechaCreacion = new DateTime(2021, 10, 16, 18, 59, 8, 3, DateTimeKind.Local).AddTicks(7080),
                            Orden = 3
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            CreadoPor = "Initial",
                            Descripcion = "Montado",
                            FechaCreacion = new DateTime(2021, 10, 16, 18, 59, 8, 3, DateTimeKind.Local).AddTicks(7083),
                            Orden = 4
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            CreadoPor = "Initial",
                            Descripcion = "Pegado",
                            FechaCreacion = new DateTime(2021, 10, 16, 18, 59, 8, 3, DateTimeKind.Local).AddTicks(7085),
                            Orden = 5
                        },
                        new
                        {
                            Id = 6,
                            Activo = true,
                            CreadoPor = "Initial",
                            Descripcion = "Terminado ",
                            FechaCreacion = new DateTime(2021, 10, 16, 18, 59, 8, 3, DateTimeKind.Local).AddTicks(7088),
                            Orden = 6
                        });
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdReceta")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdReceta");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.InsumoStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadStockReserva")
                        .HasColumnType("int");

                    b.Property<int>("CantidadStockTotal")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedorPreferido")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdProveedorPreferido");

                    b.ToTable("InsumosStock");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.OrdenProduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadTotal")
                        .HasColumnType("int");

                    b.Property<int>("CantidadTotalFabricada")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EstadoEtapaOrdenProduccion")
                        .HasColumnType("int");

                    b.Property<int>("EstadoOrdenProduccion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdEtapaOrdenProduccion")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitudDetalle")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdEtapaOrdenProduccion");

                    b.HasIndex("IdSolicitudDetalle");

                    b.ToTable("OrdenesProduccion");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.OrdenProduccionEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadFabricada")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoEtapaOrdenProduccion")
                        .HasColumnType("int");

                    b.Property<int>("EstadoOrdenProduccion")
                        .HasColumnType("int");

                    b.Property<int>("IdEtapaOrdenProduccion")
                        .HasColumnType("int");

                    b.Property<int>("IdOrdenProduccion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrdeneProduccionEventos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProvedorCuentaCorriente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCompra")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("MontoPagado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPago")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdProveedor");

                    b.ToTable("ProvedorCuentaCorriente");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CUIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorArticulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdProveedor");

                    b.ToTable("ProveedorArticulo");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorArticuloHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdProveedor");

                    b.ToTable("ProveedorArticuloHistorico");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdProveedor");

                    b.ToTable("ProveedorInsumo");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorInsumoHistorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdProveedor");

                    b.ToTable("ProveedorInsumoHistorico");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Receta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.RecetaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEtapaOrdenProduccion")
                        .HasColumnType("int");

                    b.Property<int>("IdInsumo")
                        .HasColumnType("int");

                    b.Property<int>("IdReceta")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdEtapaOrdenProduccion");

                    b.HasIndex("IdInsumo");

                    b.HasIndex("IdReceta");

                    b.ToTable("RecetaDetalle");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EstadoSolicitud")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdSucursal");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.SolicitudDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadSolicitada")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("SolicitudDetalles");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.SolicitudEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("EstadoSolicitud")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdSolicitud");

                    b.ToTable("SolicitudEventos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sucursales");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.UsuarioApi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ApiKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UsuariosApi");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdSucursal")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VentaTipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdSucursal");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.VentaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdVenta")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdVenta");

                    b.ToTable("VentaDetalle");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Articulo", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.ArticuloCategoria", "ArticuloCategoria")
                        .WithMany("Articulos")
                        .HasForeignKey("IdArticuloCategoria")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Receta", "Receta")
                        .WithMany()
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ArticuloCategoria");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ArticuloStock", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IdProveedorPreferido")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Core.Dominio.AggregatesModel.Sucursal", "Sucursal")
                        .WithMany("ArticulosStock")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Proveedor");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.CajaSucursal", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Sucursal", "Sucursal")
                        .WithMany("CajaSucursal")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ClienteCuentaCorriente", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Cliente", "Cliente")
                        .WithMany("ClienteCuentaCorriente")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Compra", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Sucursal", "Sucursal")
                        .WithMany("Compras")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Proveedor");

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.CompraArticulo", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Compra", "Compra")
                        .WithMany("CompraArticulos")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Compra");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.CompraInsumo", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Core.Dominio.AggregatesModel.Compra", "Compra")
                        .WithMany("CompraInsumos")
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Insumo");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Insumo", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Receta", "Receta")
                        .WithMany()
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.InsumoStock", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IdProveedorPreferido")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.OrdenProduccion", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.EtapaOrdenProduccion", "EtapaOrdenProduccion")
                        .WithMany()
                        .HasForeignKey("IdEtapaOrdenProduccion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.SolicitudDetalle", "SolicitudDetalle")
                        .WithMany("OrdenesProduccion")
                        .HasForeignKey("IdSolicitudDetalle")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("EtapaOrdenProduccion");

                    b.Navigation("SolicitudDetalle");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProvedorCuentaCorriente", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Compra", "Compra")
                        .WithMany()
                        .HasForeignKey("IdCompra")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany("ProvedorCuentaCorriente")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorArticulo", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany("ProveedorArticulos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorArticuloHistorico", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany("ArticuloHistorico")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorInsumo", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany("ProveedorInsumos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ProveedorInsumoHistorico", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Insumo", "Insumo")
                        .WithMany("InsumoHistorico")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Insumo");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Receta", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.RecetaDetalle", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.EtapaOrdenProduccion", "EtapaOrdenProduccion")
                        .WithMany("RecetaDetalle")
                        .HasForeignKey("IdEtapaOrdenProduccion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Insumo", "Insumo")
                        .WithMany("RecetaDetalle")
                        .HasForeignKey("IdInsumo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Receta", "Receta")
                        .WithMany("RecetaDetalles")
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("EtapaOrdenProduccion");

                    b.Navigation("Insumo");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Solicitud", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Sucursal", "Sucursal")
                        .WithMany("Solicitudes")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Sucursal");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.SolicitudDetalle", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Solicitud", "Solicitud")
                        .WithMany("SolicitudDetalles")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.SolicitudEvento", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Solicitud", "Solicitud")
                        .WithMany("SolicitudEventos")
                        .HasForeignKey("IdSolicitud")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Venta", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Sucursal", "Sucursal")
                        .WithMany("Ventas")
                        .HasForeignKey("IdSucursal")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Sucursal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.VentaDetalle", b =>
                {
                    b.HasOne("Core.Dominio.AggregatesModel.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Dominio.AggregatesModel.Venta", "Venta")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("IdVenta")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Articulo", b =>
                {
                    b.Navigation("ArticuloHistorico");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.ArticuloCategoria", b =>
                {
                    b.Navigation("Articulos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Cliente", b =>
                {
                    b.Navigation("ClienteCuentaCorriente");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Compra", b =>
                {
                    b.Navigation("CompraArticulos");

                    b.Navigation("CompraInsumos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.EtapaOrdenProduccion", b =>
                {
                    b.Navigation("RecetaDetalle");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Insumo", b =>
                {
                    b.Navigation("InsumoHistorico");

                    b.Navigation("RecetaDetalle");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Proveedor", b =>
                {
                    b.Navigation("ProvedorCuentaCorriente");

                    b.Navigation("ProveedorArticulos");

                    b.Navigation("ProveedorInsumos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Receta", b =>
                {
                    b.Navigation("RecetaDetalles");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Solicitud", b =>
                {
                    b.Navigation("SolicitudDetalles");

                    b.Navigation("SolicitudEventos");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.SolicitudDetalle", b =>
                {
                    b.Navigation("OrdenesProduccion");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Sucursal", b =>
                {
                    b.Navigation("ArticulosStock");

                    b.Navigation("CajaSucursal");

                    b.Navigation("Compras");

                    b.Navigation("Solicitudes");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Core.Dominio.AggregatesModel.Venta", b =>
                {
                    b.Navigation("VentaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
