@{
    ViewData["Title"] = "Crear Articulo";
    bool esEdicion = (Model.Articulo.Id != 0);
    Layout = "_Layout";
}

@using Web.Site.Areas
@model ArticuloModel

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-12">
        <h2>@(esEdicion ? "Modificar" : "Crear")</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Dashboard_1", "Dashboards")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Gestion</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Articulo", new { area = "abm" })">Articulos</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@(esEdicion ? "Modificar" : "Crear")</strong>
            </li>
        </ol>
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight ecommerce">

    @using (Html.BeginForm(esEdicion ? "Editar" : "Crear", "Articulo", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Articulo.Id)
    <div class="ibox-content m-b-sm border-bottom">
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Articulo.Nombre)
                    @Html.EditorFor(model => model.Articulo.Nombre, new { htmlAttributes = new { @id = "Nombre", @class = "form-control", @placeholder = "Nombre de Articulo" } })
                    @Html.ValidationMessageFor(model => model.Articulo.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Articulo.IdArticuloCategoria)
                    @Html.DropDownListFor(m => m.Articulo.IdArticuloCategoria, new SelectList(Model.ArticuloCategorias, "Id", "Descripcion", Model.ArticuloCategorias.FirstOrDefault()), new { @class = "form-control m-b", @id = "dropdownCategorias" })                 
                    @*@Html.DropDownListFor(m => m.ArticuloEstado, new SelectList(Model.ArticuloEstados, "Id", "Nombre", Model.ArticuloEstados.First()), new { @class = "form-control m-b", @id = "dropdownSucursales" })*@
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Articulo.Descripcion)
                    @Html.EditorFor(model => model.Articulo.Descripcion, new { htmlAttributes = new { @id = "Descripcion", @class = "form-control", @placeholder = "Descripcion" } })
                    @Html.ValidationMessageFor(model => model.Articulo.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Articulo.Color)
                    @Html.EditorFor(model => model.Articulo.Color, new { htmlAttributes = new { @id = "Color", @class = "form-control", @placeholder = "Color" } })
                    @Html.ValidationMessageFor(model => model.Articulo.Color, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Articulo.TalleArticulo)
                    @Html.EditorFor(model => model.Articulo.TalleArticulo, new { htmlAttributes = new { @id = "TalleArticulo", @class = "form-control", @placeholder = "Talle" } })
                    @Html.ValidationMessageFor(model => model.Articulo.TalleArticulo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(m => m.Articulo.ArticuloEstado)
                    @Html.DropDownListFor(m => m.Articulo.ArticuloEstado, new SelectList(Model.ArticuloEstados, "Id", "Descripcion", Model.ArticuloEstados.FirstOrDefault()), new { @class = "form-control m-b", @id = "dropdownArticuloEstado" })                    
                </div>
            </div>
        </div>
    </div>
        <div style="text-align:right">
            <button type="Submit" class="btn btn-w-m btn-primary">@(esEdicion ? "Modificar" : "Crear") Articulo </button>
        </div>
    }
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/switchery/switchery.css" />

    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/switchery/switchery.js"></script>

    </environment>

    <script type="text/javascript">
        $(document).ready(function () {
            var elem = document.querySelector('.js-switch_3');
            var switchery = new Switchery(elem, { color: '#1AB394' });
        });
    </script>
}

