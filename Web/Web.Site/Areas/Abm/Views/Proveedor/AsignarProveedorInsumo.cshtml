@{
    ViewData["Title"] = "Crear Receta";
    Layout = "_Layout";
    bool esEdicion = (Model.Id != 0);
    string Accion = "Insumo a proveedor";
    string url_base = "/abm/Proveedor/";
}

@using Web.Site.Areas.Fabrica.Models
@model ProveedorInsumoModel


<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-12">
        <h2>@(esEdicion ? "Modificar" : "Crear")</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Dashboard", new { area = "fabrica" })">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Fabrica</a>
            </li>
            <li class="active breadcrumb-item">
                <a href="@Url.Action("Index", "Proveedor", new { area = "fabrica" })">@Accion</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@(esEdicion ? "Modificar" : "Nueva") @Accion</strong>
            </li>
        </ol>
    </div>
</div>


<div class="wrapper wrapper-content animated fadeInRight ecommerce">

    @*@using (Html.BeginForm("AsignarProveedorInsumo", "Proveedor", FormMethod.Post, new { id = "formInsumoProveedor" }))
        {
            @Html.AntiForgeryToken()*@
    @Html.HiddenFor(x => x.IdProveedor, new { @id = "IdProveedorInsumo" })
    <div class="ibox-content m-b-sm border-bottom">
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(m => m.IdProveedor, "Nombre de Proveedor")
                    @Html.DropDownListFor(m => m.IdProveedor, new List<SelectListItem>(ViewBag.Proveedores), new { @class = "form-control m-b", @id = "dropdownIdProveedor", @disabled = "disabled" })
                </div>
            </div>
        </div>
    </div>
    <div class="wrapper wrapper-content animated fadeInRight ecommerce">
        <div class="ibox-content m-b-sm border-bottom">
            <table id="ListaAriticulo" class="table table-bordered">
                <tr>
                    <th>Nombre</th>
                    <th>Precio</th>
                    <th>Acciones</th>
                </tr>
                <tbody>
                    @if (Model.ProveedoresInsumos != null)
                    {
                        @foreach (var Adds in Model.ProveedoresInsumos)
                        {
                            if (Adds != null)
                            {
                                @await Html.PartialAsync("ProveedorInsumoModel", Adds)
                            }
                        }
                    }
                </tbody>
            </table>
            <div class="ibox-content border-0 pt-0 pr-0">
                <div class="text-center d-flex justify-content-end">
                    <button type="button" class="btn btn-primary btn-xs" data-toggle="modal" data-target="#NewCommentModal">
                        Asignar @Accion
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div style="text-align:right">
        @*@if (esEdicion)
            {
                <a class="btn btn-w-m btn-primary" href="@Url.Action("Index", "Proveedor", new { area = "fabrica" })">Volver a Proveedores</a>
            }
            else
            {
                <button id="btnReceta" type="Submit" class="btn btn-w-m btn-primary"></button>
            }*@

    </div>
    @*}*@
    @* MODAL NEW COMMENT *@
    <div class="modal inmodal fade" id="NewCommentModal" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header pb-1">
                    <div class="row">
                        <div class="col-sm-12 d-flex justify-content-center">
                            <h1 style="font-size:30px;">Nuevo @Accion</h1>
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(x => x.IdProveedor)
                <div class="modal-body py-2">
                    <div class="form-floating">
                        @Html.LabelFor(m => m.IdInsumo)
                        @Html.DropDownListFor(m => m.IdInsumo, new List<SelectListItem>(ViewBag.Insumos), " -- Seleccionar Insumo --", new { @id = "IdInsumo", @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.IdInsumo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="modal-body py-2">
                    <div class="form-floating">
                        @Html.LabelFor(m => m.Precio)
                        @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @id = "Precio", @class = "form-control ", @placeholder = "" } })
                        @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-white" data-dismiss="modal">Cerrar</button>
                    <button type="button" onclick="addInsumo()" class="btn btn-primary" data-dismiss="modal">Agregar Insumos</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/sweetalert/dist/sweetalert.css" />

    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
        <script src="~/lib/validate/jquery.validate.min.js"></script>
        <script src="~/lib/sweetalert/dist/sweetalert.min.js"></script>
    </environment>

    <script type="text/javascript">
        $(document).ready(function () {

        });

        function ClearModal() {
            $("#IdInsumo").val("");
            $("#Precio").val("");
        }

        function addInsumo() {
            $.ajax({
                type: "post",
                url: '@url_base' + 'AgregarDetalle/',
                data: {
                    IdProveedor: $("#IdProveedorInsumo").val(),
                    IdInsumo: $("#IdInsumo").val(),
                    Cantidad: $("#Precio").val()
                }
            }).done(function (partialView) {
                $('#ListaAriticulo tbody:last-child').after().append(partialView);
                ClearModal();
            });
        }

        function eliminarDetalleInsumo(row,Id) {
            swal({
                title: "Seguro que desea eliminar el insumo?",
                text: "El insumo será eliminad de la lista de detalle. Esta accion no se puede deshacer",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Si, Eliminar!",
                cancelButtonText: "Cancelar",
                closeOnConfirm: false
            }, function () {
                $.ajax({
                    type: "post",
                    url: '@url_base' + "EliminarDetalle",
                    data: { id: Id },
                    success: function (result) {
                        if (result == true) {
                            swal("Exito!", "El Insumo ha sido eliminado correctamente", "success");
                            $(row).parents('tr').first().remove();
                        } else {
                            swal("Error", "Ocurrió un error inesperado", "error");
                        }
                    }
                  })
            });
        };
        function removeRow(row) {
            $(row).parents('tr').first().remove();
        }

    </script>
}

