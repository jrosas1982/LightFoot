@{
    ViewData["Title"] = "Crear Proveedor";
    bool esEdicion = (Model.Id != 0);
    Layout = "_Layout";
}

@using Web.Site.Areas
@model Proveedor

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-xl-10 col-lg-9">
        <h2>@(esEdicion ? "Modificar Proveedor: " + Model.Nombre : "Crear")</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Dashboard_1", "Dashboards")">Home</a>
            </li>
            <li class="breadcrumb-item">
                <a>Gestion</a>
            </li>
            <li class="active breadcrumb-item">
                <a href="@Url.Action("Index", "Proveedor", new { area = "abm" })">Proveedor</a>
            </li>
            <li class="active breadcrumb-item">
                <strong>@(esEdicion ? "Modificar" : "Crear")</strong>
            </li>
        </ol>
    </div>
    <div class="col-xl-2 col-lg-3 mt-1 mt-sm-2 d-flex justify-content-end align-items-end" style="text-align:right">
        @*<button type="button" class="btn btn-default w-100"
                onclick="location.href='@Url.Action("Index", "Proveedor", 0)'">
            <span class="icon icon-xs"><span class="fas fa-chevron-left mr-2"></span></span>Volver
        </button>*@
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight ecommerce">

    @using (Html.BeginForm(esEdicion ? "Editar" : "Crear", "Proveedor", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Id)
        @if (esEdicion)
        {
            @Html.HiddenFor(x => x.Nombre)
            @Html.HiddenFor(x => x.CUIT)
        }
        <div class="ibox-content m-b-sm border-bottom">
            @if (!esEdicion)
            {
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Nombre)
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @id = "Nombre", @class = "form-control", @placeholder = "Nombre" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="form-group">
                            @Html.LabelFor(m => m.CUIT)
                            @Html.EditorFor(model => model.CUIT, new { htmlAttributes = new { @id = "CUIT", @class = "form-control", @placeholder = "CUIT de Proveedor", @onkeypress = "return valideKey(event);", @maxlength = "11" } })
                            @Html.ValidationMessageFor(model => model.CUIT, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Direccion)
                        @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @id = "Direccion", @class = "form-control", @placeholder = "Direccion" } })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Telefono)
                        @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @id = "Telefono", @class = "form-control", @placeholder = "Telefono" } })
                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email)
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id = "Email", @class = "form-control", @placeholder = "ejemplo@email.com", @type = "email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <button type="Submit" class="btn btn-w-m btn-primary w-100">@(esEdicion ? "Modificar" : "Crear") Proveedor</button>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <button type="button" class="btn btn-default w-100"
                                onclick="location.href='@Url.Action("Index", "Proveedor", 0)'">
                            <span class="icon icon-xs"><span class="fas fa-chevron-left mr-2"></span></span>Volver
                        </button>
                    </div>
                </div>
            </div>
        </div>

    }

</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/switchery/switchery.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.css" />
        <link rel="stylesheet" href="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/switchery/switchery.js"></script>
        <script src="~/lib/bootstrap-touchspin/dist/jquery.bootstrap-touchspin.min.js"></script>
        <script src="~/lib/bootstrap-tagsinput/bootstrap-tagsinput.js"></script>
        <script src="~/js/apphelpers.js"></script>
    </environment>

    <script type="text/javascript">
        $(document).ready(function () {
            var elem = document.querySelector('.js-switch_3');
            var switchery = new Switchery(elem, { color: '#1AB394' });


            
        });

        $(".touchspin").TouchSpin({
            verticalbuttons: true,
            min: 0,
            max: 10,
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white'
        });
    </script>
}

